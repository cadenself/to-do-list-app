// Get references to HTML elements
const taskInput = document.getElementById('task-input');      // The input box where you type tasks
const addTaskBtn = document.getElementById('add-task-btn');    // The "Add" button
const taskList = document.getElementById('task-list');         // The <ul> where tasks will be listed

// Function to add a new task
function addTask() {
  const taskText = taskInput.value.trim();  // Get text and remove extra spaces
  
  if (taskText === '') {                     // If input is empty, alert the user
    alert('Please enter a task!');
    return;
  }

  // Create a new list item (<li>)
  const li = document.createElement('li');
  li.className = 'task-item';
  li.textContent = taskText;

  // When clicking a task, toggle its 'completed' status (strike-through effect)
  li.addEventListener('click', () => {
    li.classList.toggle('completed');
  });

  // Create a delete button for this task
  const deleteBtn = document.createElement('button');
  deleteBtn.textContent = 'X';             // Button text
  deleteBtn.className = 'delete-btn';      // Add CSS class for styling

  // When delete button is clicked, remove this task
  deleteBtn.addEventListener('click', (e) => {
    e.stopPropagation();                    // Prevent triggering the task toggle when deleting
    taskList.removeChild(li);
  });

  // Add the delete button inside the list item
  li.appendChild(deleteBtn);

  // Add the new task item to the list
  taskList.appendChild(li);

  // Clear the input box for the next task
  taskInput.value = '';
}

// Event listener for clicking the "Add" button
addTaskBtn.addEventListener('click', addTask);

// Also add task when user presses "Enter" key inside the input box
taskInput.addEventListener('keydown', (e) => {
  if (e.key === 'Enter') {
    addTask();
  }
});
